{"version":3,"sources":["../src/components/Container.tsx","../src/constants.ts","../src/utils/getNormalizedBreakpointName.ts","../src/utils/getBreakpoints.ts","../src/utils/getContainerWidth.ts","../src/utils/getMediaCSS.ts","../src/utils/getEmotionCache.ts","../src/components/Row.tsx","../src/components/Col.tsx","../src/utils/round.ts"],"sourcesContent":["import React from \"react\";\nimport { css, CacheProvider } from \"@emotion/react\";\nimport { getBreakpoints } from \"../utils/getBreakpoints\";\nimport { getContainerWidth } from \"../utils/getContainerWidth\";\nimport { getMediaCSS } from \"../utils/getMediaCSS\";\nimport { getEmotionCache } from \"../utils/getEmotionCache\";\n\ntype ContainerProps = {\n  as?: \"div\" | \"header\" | \"main\" | \"section\" | \"article\" | \"aside\" | \"footer\";\n  xl?: boolean;\n  lg?: boolean;\n  md?: boolean;\n  sm?: boolean;\n  children?: React.ReactNode; // Accepts everything React can render\n  childrenElement: JSX.Element; // A single React element\n  style?: React.CSSProperties; // to pass through style props\n  //  more info: https://react-typescript-cheatsheet.netlify.app/docs/advanced/patterns_by_usecase/#wrappingmirroring\n  props: React.ComponentPropsWithoutRef<\"div\">; // to impersonate all the props of a button element and explicitly not forwarding its ref\n};\n\nexport function Container({\n  as = \"div\",\n  xl = false,\n  lg = false,\n  md = false,\n  sm = false,\n  ...restProps\n}: ContainerProps): JSX.Element {\n  const Element = as;\n  let size = \"xxl\";\n\n  if (xl) {\n    size = \"xl\";\n  } else if (lg) {\n    size = \"lg\";\n  } else if (md) {\n    size = \"md\";\n  } else if (sm) {\n    size = \"sm\";\n  }\n\n  const breakpoints = getBreakpoints(\"first\", size);\n\n  return (\n    <CacheProvider value={getEmotionCache()}>\n      <Element\n        css={css`\n          margin-left: auto;\n          margin-right: auto;\n          width: 100%;\n\n          ${breakpoints.map((bp) => {\n            return getMediaCSS(bp, `max-width: ${getContainerWidth(bp)};`);\n          })}\n        `}\n        {...restProps}\n      />\n    </CacheProvider>\n  );\n}\n","export enum BreakpointNames {\n  SM = \"sm\",\n  MD = \"md\",\n  LG = \"lg\",\n  XL = \"xl\",\n  XXL = \"xxl\",\n}\n\n// TODO: remove string type. For some reason in some utils there is an TS error when we don't use string here.\nexport type BreakpointsTypes = \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\" | string;\n\nexport type BreakpointsSizeTypes = {\n  [key in BreakpointsTypes]: number;\n};\nexport const breakpoints: BreakpointsSizeTypes = {\n  sm: 576,\n  md: 768,\n  lg: 1024,\n  xl: 1280,\n  xxl: 1536,\n};\n\ntype ContainerMaxWidthsTypes = {\n  [key in BreakpointsTypes]: number;\n};\nexport const containerMaxWidths: ContainerMaxWidthsTypes = {\n  sm: 540,\n  md: 740,\n  lg: 996,\n  xl: 1200,\n  xxl: 1490,\n};\n","import { breakpoints, BreakpointsTypes } from \"../constants\";\n\nexport function getNormalizedBreakpointName(\n  name: \"first\" | \"last\" | BreakpointsTypes = \"sm\"\n): BreakpointsTypes {\n  let result;\n\n  if (name === \"first\") {\n    [result] = Object.keys(breakpoints);\n  } else if (name === \"last\") {\n    result = Object.keys(breakpoints)[Object.keys(breakpoints).length - 1];\n  } else {\n    result = name;\n  }\n\n  return result as BreakpointsTypes;\n}\n","import { breakpoints, BreakpointsTypes } from \"../constants\";\nimport { getNormalizedBreakpointName } from \"./getNormalizedBreakpointName\";\n\nexport function getBreakpoints(\n  from: \"first\" | \"last\" | BreakpointsTypes = \"first\",\n  to: \"first\" | \"last\" | BreakpointsTypes = \"last\"\n): BreakpointsTypes[] {\n  const result: BreakpointsTypes[] = [];\n  const fromNormal = getNormalizedBreakpointName(from);\n  const toNormal = getNormalizedBreakpointName(to);\n\n  let save = false;\n\n  Object.keys(breakpoints).forEach((bp) => {\n    if (save || bp === fromNormal) {\n      save = true;\n      result.push(bp);\n    }\n    if (bp === toNormal) {\n      save = false;\n    }\n  });\n\n  return result;\n}\n","import { containerMaxWidths } from \"../constants\";\nimport { getNormalizedBreakpointName } from \"./getNormalizedBreakpointName\";\n\nexport function getContainerWidth(bp: string): string | number {\n  let bpNormal = getNormalizedBreakpointName(bp);\n\n  return typeof bpNormal !== \"undefined\" &&\n    typeof containerMaxWidths[bpNormal] !== \"undefined\"\n    ? `${containerMaxWidths[bpNormal]}px`\n    : 0;\n}\n","import { breakpoints } from \"../constants.js\";\n\nexport function getMediaCSS(bp: string, content: string): string {\n  return `\n    @media screen and (min-width: ${breakpoints[bp]}px) {\n      ${content}\n    }\n  `;\n}\n","import _createCache from \"@emotion/cache\";\n\n// Hack since there is no full ESM support.\n// @link https://github.com/emotion-js/emotion/issues/2730\n// const createCache = _createCache.default || _createCache;\nconst createCache =\n  typeof _createCache.default !== \"undefined\"\n    ? (_createCache.default as any)\n    : _createCache;\n\nconst emotionCache = createCache({ key: \"onelayout\" });\n\nexport function getEmotionCache() {\n  return emotionCache;\n}\n","import { css, CacheProvider } from \"@emotion/react\";\nimport { getBreakpoints } from \"../utils/getBreakpoints\";\nimport { getEmotionCache } from \"../utils/getEmotionCache\";\nimport { getMediaCSS } from \"../utils/getMediaCSS\";\n\ntype RowStyleProps = {\n  as?: \"div\" | \"header\" | \"main\" | \"section\" | \"article\" | \"aside\" | \"footer\";\n  direction?: \"row\" | \"column\" | \"row-reverse\" | \"column-reverse\";\n  justify?:\n    | \"start\"\n    | \"end\"\n    | \"center\"\n    | \"space-between\"\n    | \"space-around\"\n    | \"space-evenly\";\n  align?: \"start\" | \"end\" | \"center\";\n  wrap?: false | true | \"wrap\" | \"nowrap\" | \"wrap-reverse\";\n  gap?: string;\n};\n\ntype RowProps =\n  // TODO: remove this any. We added it because there is an unresolved TS error.\n  | any\n  | (RowStyleProps & {\n      sm?: RowStyleProps;\n      md?: RowStyleProps;\n      lg?: RowStyleProps;\n      xl?: RowStyleProps;\n      xxl?: RowStyleProps;\n    });\n\nfunction getStyles(props: RowStyleProps) {\n  let result = \"\";\n\n  if (true === props.wrap) {\n    props.wrap = \"wrap\";\n  } else if (false === props.wrap) {\n    props.wrap = \"nowrap\";\n  }\n\n  const gapArray = typeof props.gap !== \"undefined\" ? props.gap.split(\" \") : [];\n  const rowGap = gapArray[0];\n  let colGap = rowGap;\n\n  if (typeof gapArray[1] !== \"undefined\") {\n    colGap = gapArray[1];\n  }\n\n  if (typeof rowGap !== \"undefined\") {\n    result += `--ol-row-gap: ${rowGap};\\n`;\n  }\n\n  if (typeof colGap !== \"undefined\") {\n    result += `--ol-col-gap: ${colGap};\\n`;\n  }\n\n  if (typeof props.direction !== \"undefined\") {\n    result += `flex-direction: ${props.direction};\\n`;\n  }\n\n  if (typeof props.justify !== \"undefined\") {\n    result += `justify-content: ${props.justify};\\n`;\n  }\n\n  if (typeof props.align !== \"undefined\") {\n    result += `align-items: ${props.align};\\n`;\n  }\n\n  if (typeof props.wrap !== \"undefined\") {\n    result += `flex-wrap: ${props.wrap};\\n`;\n  }\n\n  return result;\n}\n\nexport function Row(props: RowProps): JSX.Element {\n  const {\n    as = \"div\",\n    direction = \"row\",\n    wrap = true,\n    justify = \"start\",\n    align = \"start\",\n    gap = \"1.5rem\",\n    sm,\n    md,\n    lg,\n    xl,\n    xxl,\n    ...restProps\n  } = props;\n\n  const Element = as;\n  const breakpoints = getBreakpoints();\n\n  return (\n    <CacheProvider value={getEmotionCache()}>\n      <Element\n        css={css`\n          ${getStyles({\n            gap,\n            direction,\n            justify,\n            align,\n            wrap,\n          })}\n\n          ${breakpoints.map((bp) => {\n            if (typeof props[bp] !== \"undefined\") {\n              return getMediaCSS(bp, getStyles(props[bp]));\n            }\n\n            return \"\";\n          })}\n\n          display: flex;\n          row-gap: var(--ol-row-gap);\n          column-gap: var(--ol-col-gap);\n\n          > * {\n            margin: 0;\n          }\n        `}\n        {...restProps}\n      />\n    </CacheProvider>\n  );\n}\n","import { css, CacheProvider } from \"@emotion/react\";\nimport { getBreakpoints } from \"../utils/getBreakpoints\";\nimport { getEmotionCache } from \"../utils/getEmotionCache\";\nimport { getMediaCSS } from \"../utils/getMediaCSS\";\nimport round from \"../utils/round\";\n\ntype ColStyleProps = {\n  as?: \"div\" | \"header\" | \"main\" | \"section\" | \"article\" | \"aside\" | \"footer\";\n  size?: \"grow\" | \"auto\" | number;\n  justify?: \"start\" | \"end\" | \"center\" | \"stretch\";\n  align?: \"start\" | \"end\" | \"center\" | \"stretch\";\n};\n\ntype ColProps =\n  // TODO: remove this any. We added it because there is an unresolved TS error.\n  | any\n  | (ColStyleProps & {\n      sm?: ColStyleProps;\n      md?: ColStyleProps;\n      lg?: ColStyleProps;\n      xl?: ColStyleProps;\n      xxl?: ColStyleProps;\n    });\n\nfunction getStyles(props: ColStyleProps) {\n  let result = \"\";\n  let width = \"auto\";\n\n  if (typeof props.size !== \"undefined\") {\n    let flex = \"1 1 auto\";\n\n    if (\"auto\" === props.size) {\n      flex = \"0 1 auto\";\n    } else if (typeof props.size === \"number\") {\n      flex = \"0 0 auto\";\n      width = `${round(props.size * 100, 4)}%`;\n    } else if (props.size !== \"grow\") {\n      flex = \"0 0 auto\";\n      width = props.size;\n    }\n\n    result += `flex: ${flex};\\n`;\n  }\n\n  if (typeof props.justify !== \"undefined\") {\n    result += `justify-self: ${props.justify};\\n`;\n  }\n\n  if (typeof props.align !== \"undefined\") {\n    result += `align-self: ${props.align};\\n`;\n  }\n\n  if (width) {\n    // Prepare percent width to work with gap properly.\n    if (width.endsWith(\"%\")) {\n      const sizeFromWidth = parseFloat(width) / 100;\n\n      if (sizeFromWidth !== 1) {\n        width = `calc(${width} - var(--ol-col-gap) + ${sizeFromWidth} * var(--ol-col-gap));\\n`;\n      }\n    }\n\n    result += `width: ${width};\\n`;\n  }\n\n  return result;\n}\n\nexport function Col(props: ColProps): JSX.Element {\n  const {\n    as = \"div\",\n    size = \"grow\",\n    justify = \"start\",\n    align = \"start\",\n    sm,\n    md,\n    lg,\n    xl,\n    xxl,\n    ...restProps\n  } = props;\n\n  const Element = as;\n  const breakpoints = getBreakpoints();\n\n  return (\n    <CacheProvider value={getEmotionCache()}>\n      <Element\n        css={css`\n          ${getStyles({\n            size,\n            justify,\n            align,\n          })}\n\n          ${breakpoints.map((bp) => {\n            if (typeof props[bp] !== \"undefined\") {\n              return getMediaCSS(bp, getStyles(props[bp]));\n            }\n\n            return \"\";\n          })}\n        `}\n        {...restProps}\n      />\n    </CacheProvider>\n  );\n}\n","export default function round(num: number, to: number = 2): number {\n  const pw = 10 ** to;\n  return Math.round((num + Number.EPSILON) * pw) / pw;\n}\n"],"mappings":"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","names":["breakpoints","css","CacheProvider","jsx","breakpoints","CacheProvider","css","css","CacheProvider","jsx","getStyles","breakpoints","CacheProvider","css"]}